print('Самомтоятельная работа')
print('      Попробую самостятельно создать класс Пицца')

''''
Шаг 1
Создам класс пицца. 
В нем будет лепешка, соус помодоро, сыр

Шаг 2
Сначало добавлю соль, 
а потом  соль=3гр.

Шаг 3
Создам экземпляр ( потомок) Дьябло с колбасками и перцем

'''
class Pizza():
    def __init__(self, лепешка, соус_помодорро, сыр):
        "Инициализирую атрибуты пиццы"
        self.лепешка = лепешка
        self.соус_помодорро = соус_помодорро
        self.сыр= сыр
    def get_descriptive_name(self):
        """Возвращает аккуратно отформатированное описание."""

        long_name = f"{self.лепешка} {self.соус_помодорро} {self.сыр}"
        return long_name.title()
print('      Шаг 1 Создам и распечатаю мой экземпляр пиццы:')
my_pizza = Pizza('дрожжевая_лепешка', 'томатный_соус', 'Пармезан')
print(my_pizza.get_descriptive_name())


print()
print('    Шаг 2 Сначало добавлю соль, .')

class Pizza():
    def __init__(self, лепешка, соус_помодорро, сыр):
        "Инициализирую атрибуты пиццы"
        self.лепешка = лепешка
        self.соус_помодорро = соус_помодорро
        self.сыр= сыр
        self.соль = 0 # Добавил соль
    def get_descriptive_name(self):
        """Возвращает аккуратно отформатированное описание."""

        long_name = f"{self.лепешка} {self.соус_помодорро} {self.сыр}"
        return long_name.title()

    def количество_соли(self):
        "Метод Выводит количество соли в граммах"
        print(f"В этой пицце {self.соль} грамм соли")

my_pizza = Pizza('дрожжевая_лепешка', 'томатный_соус', 'Пармезан')
print(my_pizza.get_descriptive_name()) # Выведу общую инфу о пицце
my_pizza.количество_соли() # Выведу инфу о соли

print(' Шаг 2. Метод 1. Изменю количество соли прямо в экземпляре (некорректный вариант)')

my_pizza.соль = 6 # Точечное изменение. Обратился к экземпляру и к связ-му Атрибуту
my_pizza.количество_соли() # выведу количество соли

print(' Шаг 2. Метод 2. Задам значение соли (10 гр.) при помощи метода')

class Pizza():
    def __init__(self, лепешка, соус_помодорро, сыр):
        "Инициализирую атрибуты пиццы"
        self.лепешка = лепешка
        self.соус_помодорро = соус_помодорро
        self.сыр= сыр
        self.соль = 0 # Добавил соль
    def get_descriptive_name(self):
        """Возвращает аккуратно отформатированное описание."""

        long_name = f"{self.лепешка} {self.соус_помодорро} {self.сыр}"
        return long_name.title()

    def количество_соли(self):
        "Метод Выводит количество соли в граммах"
        print(f"В этой пицце {self.соль} грамм соли")

    def обновление_соли(self, добавь_соли): # Создал метод, для культурного добавления соли
        self.соль = добавь_соли

my_pizza = Pizza('дрожжевая_лепешка', 'томатный_соус', 'Пармезан')
my_pizza.обновление_соли(+30) # Изменил количество соли

print(my_pizza.get_descriptive_name()) # Выведу общую инфу о пицце
my_pizza.количество_соли() # Выведу количество соли

print(' -->Сделаю защиту, от убавления соли')
class Pizza():
    def __init__(self, лепешка, соус_помодорро, сыр):
        "Инициализирую атрибуты пиццы"
        self.лепешка = лепешка
        self.соус_помодорро = соус_помодорро
        self.сыр= сыр
        self.соль = 10 # По умолчанию в каждой пицце 10 гр. соли!
    def get_descriptive_name(self):
        """Возвращает аккуратно отформатированное описание."""

        long_name = f"{self.лепешка} {self.соус_помодорро} {self.сыр}"
        return long_name.title()

    def количество_соли(self):
        "Метод Выводит количество соли в граммах"
        print(f"В этой пицце {self.соль} грамм соли")

    def обновление_соли(self, добавь_соли): # Создал метод, для культурного добавления соли
        "Код ниже не позволит уменьшить количество соли"
        if добавь_соли >= self.соль:
            self.соль = добавь_соли
        else:
            print("  !!!Уменьшать количество соли нельзя!!!")

my_pizza = Pizza('дрожжевая_лепешка', 'томатный_соус', 'Пармезан')


print(my_pizza.get_descriptive_name()) # Выведу общую инфу о пицце
my_pizza.обновление_соли(5) # Намеренно уменьшаю соль с 10 до 5 гр, и увижу предупреждение
my_pizza.количество_соли() # Выведу количество соли

print(' Шаг 2. Метод 3. Сделаю изменение соли с приращением. По умолчанию будет 10 гр.')

class Pizza():
    def __init__(self, лепешка, соус_помодорро, сыр):
        "Инициализирую атрибуты пиццы"
        self.лепешка = лепешка
        self.соус_помодорро = соус_помодорро
        self.сыр= сыр
        self.соль = 10 # По умолчанию в каждой пицце 10 гр. соли!
    def get_descriptive_name(self):
        """Возвращает аккуратно отформатированное описание."""
        long_name = f"{self.лепешка} {self.соус_помодорро} {self.сыр}"
        return long_name.title()

    def количество_соли(self):
        "Метод Выводит количество соли в граммах"
        print(f"В этой пицце {self.соль} грамм соли")

    def обновление_соли(self, добавь_соли): # Создал метод, для культурного добавления соли
        "Код ниже не позволит уменьшить количество соли"
        if добавь_соли >= self.соль:
            self.соль = добавь_соли
        else:
            print("  !!!Уменьшать количество соли нельзя!!!")

    def прирост_соли(self,подсолили): # Это метод будет увеличивать соль с приращением
        if подсолили >= 0:
            self.соль += подсолили
        else:
            print("!!! Нельзя уменьшать соль!!!")


my_pizza = Pizza('дрожжевая_лепешка', 'томатный_соус', 'Пармезан')

print(my_pizza.get_descriptive_name())  # Выведу общую инфу о пицце
my_pizza.прирост_соли(20) # Добавляю 20 гр. соли
my_pizza.количество_соли()  # Выведу количество соли

print('   # пробую уменьшить количество соли, что бы увидеть, что код не позволит')
print(my_pizza.get_descriptive_name())  # Выведу общую инфу о пицце
my_pizza.прирост_соли(-5) # Добавляю 5 гр. соли
my_pizza.количество_соли()  # Выведу количество соли

print()
print('    НАСЛЕДОВАНИЕ')
print('    Шаг 3 Создам экземпляр ( потомок) Дьябло с колбасками и перцем')

class Pizza():
    def __init__(self, лепешка, соус_помодорро, сыр):
        "Инициализирую атрибуты пиццы"
        self.лепешка = лепешка
        self.соус_помодорро = соус_помодорро
        self.сыр= сыр
        self.соль = 10 # По умолчанию в каждой пицце 10 гр. соли!
    def get_descriptive_name(self):
        """Возвращает аккуратно отформатированное описание."""
        long_name = f"{self.лепешка} {self.соус_помодорро} {self.сыр}"
        return long_name.title()

    def количество_соли(self):
        "Метод Выводит количество соли в граммах"
        print(f"В этой пицце {self.соль} грамм соли")

    def обновление_соли(self, добавь_соли): # Создал метод, для культурного добавления соли
        "Код ниже не позволит уменьшить количество соли"
        if добавь_соли >= self.соль:
            self.соль = добавь_соли
        else:
            print("  !!!Уменьшать количество соли нельзя!!!")

    def прирост_соли(self,подсолили): # Это метод будет увеличивать соль с приращением
        if подсолили >= 0:
            self.соль += подсолили
        else:
            print("!!! Нельзя уменьшать соль!!!")




class Pizza_Diablo(Pizza): # Рождение потомка Дьябло

    def __init__(self, лепешка, соус_помодорро, сыр):
        """инициализирует атрибуты класса-родителя."""
        super().__init__(лепешка, соус_помодорро, сыр)
        self.колбаски = 5
        "Функция super() — специальная функция, которая позволяет вызвать метод родительского класса."

    def количество_колбасок(self):   # Это метод выведет количество колбасок
        print(f" В этой пицце {self.колбаски} колбасок. ")




my_pizza = Pizza_Diablo('лепешка', 'соус_помодорро', 'сыр')  # создали экземпляр
print(my_pizza.get_descriptive_name()) # выведем описание
my_pizza.количество_колбасок()

print('     Конец самостоятельной работы\n Прдолжаю изучать классы')
