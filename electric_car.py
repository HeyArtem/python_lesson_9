print()
print()
print('    - Импортирование модуля в модуль')

""""
Чтобы избежать чрезмерного разрастания одного файла либо хранения несвязанных классов в одном
модуле классы приходится распределять по нескольким модулям. Но при хранении классов в нескольких
модулях один класс из одного модуля может зависеть от класса из другого модуля. В этом случае
необходимый класс можно импортировать в первый модуль.


Допустим, класс Car хранится в одном модуле, а классы ElectricCar и Battery — в другом.
Мы создадим новый модуль с именем electric_car.py и скопируем в него только классы
Battery и ElectricCar:

"""

"""" Набор классов для предоставления электромобилей. """
from Car_2 import Car  # Классу ElectricCar необходим доступ к классу-родителю Car,
                    # поэтому класс Car импортируется прямо в модуль

class Battery():
    """" Простая модель акб электромобиля. """

    def __init__(self, battery_size = 70):
        """" Инициализация атрибуирв акб. """
        self.battery_size = battery_size

    def describe_battery(self):
        """"Выводит информацию о мощности акб. """
        print(f" Этот автомобиль имеет акб мощностью {self.battery_size} kWh. ")

    def get_range(self):
        """"Выводит приблизительный запас хода для акб. """
        if self.battery_size == 70:
            range = 260
        elif self.battery_size == 100:
            range = 315
        print(f"Этот автомиль проедет {range} миль, до следующей зарядки")


class ElectricCar(Car):
    """" представляет аспекты машины, специфические для электромобилей. """
    def __init__(self, make, model, year):
        """"
        Инициализирует атрибуты класса-родителя.
         Затем инициализирует атрибуты, специфические для электромобиля.

        """
        super().__init__(make, model, year)
        self.battery = Battery()

""""
Если не вставить команду импортирования класса, при попытке создания экземпляра
ElectricCar, произойдет ошибка.

Обновим модуль Car, чтобы он содержал только класс Car:(Я просто создал Car_2, что бы не менят Car

"""
